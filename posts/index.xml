<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on mknkisk.log</title><link>https://blog.mknkisk.com/posts/</link><description>Recent content in Posts on mknkisk.log</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 01 Apr 2019 17:17:02 +0900</lastBuildDate><atom:link href="https://blog.mknkisk.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrade mongoid from v5.4.0 to v6.4.2</title><link>https://blog.mknkisk.com/posts/upgrade-mongoid-v6/</link><pubDate>Mon, 01 Apr 2019 17:17:02 +0900</pubDate><guid>https://blog.mknkisk.com/posts/upgrade-mongoid-v6/</guid><description>Upgrading mongoid v5.4.0 -&amp;gt; v6.4.2 refs: https://docs.mongodb.com/mongoid/6.4/tutorials/mongoid-upgrade/#upgrade-to-6-x-series 6.0.0.beta https://github.com/mongodb/mongoid/releases/tag/v6.0.0.beta
MONGOID-3944 Support #create_with method.
🆕#create_with メソッドの追加 ActiveRecord の #create_with の mongoid 版 https://qiita.com/pekepek/items/c57d4859e6e1ec8b1ad1#1-create_with MONGOID-4019, MONGOID-4182 Don&amp;rsquo;t include Mongoi::Attributes::Dynamic when cloning documents with unknown attributes.
MONGOID-4167 Raise an exception if Model#with is called with invalid driver options.
#with メソッドに利用できないオプションを指定すると例外が発生するようになる ⚠️ 古いオプションを指定している箇所があるので修正が必要 -&amp;gt; with(safe: true) MONGOID-4264 Require belongs_to by default and provide options to override requirement.</description></item><item><title>MongoDB データモデルデザイン</title><link>https://blog.mknkisk.com/posts/mongodb-data-model-design/</link><pubDate>Mon, 04 Jun 2018 23:51:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/mongodb-data-model-design/</guid><description>MongoDB 公式ドキュメントから抜粋
##Env / Versions
MongoDB v3.6 Embedded Data Models (埋め込みモデル) Example:
{ _id: &amp;lt;ObjectId1&amp;gt;, username: &amp;quot;123xyz&amp;quot;, contact: { phone: &amp;quot;123-456-7890&amp;quot;, email: &amp;quot;xyz@example.com&amp;quot; }, access: { level: 5, group: &amp;quot;dev&amp;quot; } } 非正規化モデル より少ないクエリとアップデートで済む 次のような時に使用する ・エンティティ間に「包含」関係がある。1対1の関係 ・エンティティ間に1対多の関係がある。子ドキュメントは常に親ドキュメントのコンテキストで表現される 🙆‍♀️ Strengths ・単一のデータベースから関連するデータを取得するのと同じように、参照操作のパフォーマンスを向上させうる ・1回のアトミックな更新操作で関連するデータを更新することができる 🤦‍♀️ Weaknesses ・関連データをドキュメントに埋め込むと、作成後にドキュメントサイズが大きくなる ・MMAPv1ストレージエンジンを使用すると、ドキュメントの増大が書き込みのパフォーマンスに影響を与え、データの断片化を招く可能性がある ・📝 ドキュメントのサイズは最大で 16 megabytes Normalized Data Models (参照モデル) Example:
// user document { _id: &amp;lt;ObjectId1&amp;gt;, username: &amp;quot;123xyz&amp;quot; } // contact document { _id: &amp;lt;ObjectId2&amp;gt;, user_id: &amp;lt;ObjectId1&amp;gt;, phone: &amp;quot;123-456-7890&amp;quot;, email: &amp;quot;xyz@example.</description></item><item><title>MongoDB : Replica Set の参照設定</title><link>https://blog.mknkisk.com/posts/mongodb-read-preference-note/</link><pubDate>Mon, 04 Jun 2018 01:36:29 +0900</pubDate><guid>https://blog.mknkisk.com/posts/mongodb-read-preference-note/</guid><description>📝MongoDB のドキュメントを箇条書きしていく。随時更新
Env / Versions MongoDB v3.6 参照の優先度設定 ⚠️ Primary から Secondary への非同期レプリケーションには遅延が発生するため、古いデータが返される可能性がある 参照のモード 各 MongoDB ドライバーは以下の５つのモードをサポートしている primary Primary からのみ参照する Primary が使用できない場合はエラーになる デフォルト primaryPreferred Primary から参照するが使用できない場合は Secondary から参照する secondary Secondary からのみ参照する 使用可能な Secondary が無い場合はエラーになる secondaryPreferred Secondary から参照するが使用可能な Secondary が１台もない場合は Primary から参照する nearest ネットワークレイテンシが最も低いメンバーから参照する Primary, Secondary 問わない サーバ選択アルゴリズム サーバーの選択は操作ごとに1回発生し、参照設定とlocalThresholdMS の設定によって決められる サーバ選択アルゴリズムは各クライアントで実装されている secondary または secondaryPreferred モードを指定した場合 * 最も低いレイテンシ + 15msec 以内のサーバを「使用可能」とする 15msec はデフォルト値であり変更可能 「使用可能」なサーバ群からランダムで接続先が決定される Links https://docs.</description></item><item><title>[SOLVED] Failed to auto renew ssl certificate for ghost blog</title><link>https://blog.mknkisk.com/posts/failed-to-auto-renew-ssl-certificate-for-ghost-blog/</link><pubDate>Mon, 27 Nov 2017 01:06:36 +0900</pubDate><guid>https://blog.mknkisk.com/posts/failed-to-auto-renew-ssl-certificate-for-ghost-blog/</guid><description>ghost cli v1.0.0 -&amp;gt; 1.3.0
Ref -&amp;gt; Upgrading Ghost-CLI
$ npm upgrade ghost-cli -g $ ghost version Ghost-CLI version: 1.3.0 Ghost Version (at /var/www/ghost): 1.6.2 $ ghost migrate ✔ Checking for available migrations Running sudo command: mkdir -p /etc/letsencrypt Running sudo command: ./acme.sh --install --home /etc/letsencrypt Running sudo command: /etc/letsencrypt/acme.sh --issue --home /etc/letsencrypt --domain blog.mknkisk.com --webroot /var/www/ghost/system/nginx-root --reloadcmd &amp;quot;nginx -s reload&amp;quot; --accountemail xxx@example.com Running sudo command: nginx -s reload Running sudo command: /root/.</description></item><item><title>gitignore_global - git Ignore only my settings</title><link>https://blog.mknkisk.com/posts/gitignore_global/</link><pubDate>Fri, 24 Feb 2017 12:19:48 +0900</pubDate><guid>https://blog.mknkisk.com/posts/gitignore_global/</guid><description>Git ignore locally files.
.DS_Store is only Mac user. .vscode dir is only Visual Studio Code User.
$ git config --global core.excludesfile ~/.gitignore_global $ vim ~/.gitignore_global .vscode .DS_Store</description></item><item><title>Sign in to Errbit with GitHub</title><link>https://blog.mknkisk.com/posts/sign-in-to-errbit-with-github/</link><pubDate>Fri, 17 Feb 2017 14:40:53 +0900</pubDate><guid>https://blog.mknkisk.com/posts/sign-in-to-errbit-with-github/</guid><description>Introduction I wrote about the introduction of Erribit in past postings.
How to install Errbit for Express bug tracking 🐛
This post is about how to configure Errbit to sign in with Github.
ENV Mac OSX 10.12.3 MongoDB 3.4.2 Node.js 7.5.0 Express 4.14.0 Generate new GitHub access token open https://github.com/settings/tokens
Configure Errbit $ less .env.default GITHUB_AUTHENTICATION=true GITHUB_ACCESS_SCOPE=&amp;quot;['repo']&amp;quot; $ vim .env GITHUB_CLIENT_ID=&amp;lt;YOUR_GITHUB_CLIENT_ID&amp;gt; GITHUB_SECRET=&amp;lt;YOUR_GITHUB_SECRET&amp;gt; $ bundle exec rails s -b 0.</description></item><item><title>Node.js Database Cleaner with Mongoose</title><link>https://blog.mknkisk.com/posts/node-js-database-cleaner-with-mongoose/</link><pubDate>Wed, 15 Feb 2017 22:46:34 +0900</pubDate><guid>https://blog.mknkisk.com/posts/node-js-database-cleaner-with-mongoose/</guid><description>Env
Mac OSX 10.12.3 MongoDB 3.4.2 Node.js 7.5.0 Mocha 3.2.0 database-cleaner 1.2.0 Install database-cleaner 🚿 $ yarn add -D database-cleaner or $ npm install -D database-cleaner
test/mocha.opts
&amp;ndash;reporter spec &amp;ndash;recursive &amp;ndash;require test/setup
test/setup.js
const mongoose = require(&amp;lsquo;mongoose&amp;rsquo;) const Cleaner = require(&amp;lsquo;database-cleaner&amp;rsquo;) const dbCleaner = new Cleaner(&amp;lsquo;mongodb&amp;rsquo;) global.dbCleaner = dbCleaner
test/models/user.js
const mongoose = require(&amp;lsquo;mongoose&amp;rsquo;) beforeEach((done) =&amp;gt; { // create test documents done() }) afterEach((done) =&amp;gt; { dbCleaner.clean(mongoose.connection.db, () =&amp;gt; { done() }) })</description></item><item><title>How to install Errbit for Express bug tracking 🐛</title><link>https://blog.mknkisk.com/posts/how-to-install-errbit-for-express-bug-tracking/</link><pubDate>Wed, 15 Feb 2017 22:35:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/how-to-install-errbit-for-express-bug-tracking/</guid><description>ENV Mac OSX 10.12.3 MongoDB 3.4.2 Node.js 7.5.0 Express 4.14.0 Install MongoDB $ brew install mongodb $ brew services start mongodb Start Errbit at localhost $ git clone https://github.com/errbit/errbit.git $ bundle install --path vendor/bundle --jobs 4 $ bundle exec rake errbit:bootstrap Creating an initial admin user: -- email: errbit@errbit.example.com -- password: xxxxxxxxxxxx Be sure to note down these credentials now! $ bundle exec rails server -b 0.0.0.0 -p 3001 $ open localhost:3001 📝 Errbit run on port 3001, Express run on port 3000</description></item><item><title>au -> LINEモバイル 乗り換え</title><link>https://blog.mknkisk.com/posts/line-mobile/</link><pubDate>Wed, 23 Nov 2016 19:28:28 +0900</pubDate><guid>https://blog.mknkisk.com/posts/line-mobile/</guid><description>au から LINEモバイル に乗り換え。
LINEモバイル まだ始まったばかりなので周りに使っている人もいなかったので、ダメだったら乗り換えればいいやぐらいの気持ちで選択。
Twitter, Facebook の通信料が無料になったらどのぐらいになるかなっと。普段LINEはほとんど使わない。
ということで LINEフリープラン ではなく コミュニケーションフリープラン を選択。 3GB, データ+SMS +音声電話 で ¥1,693 / 月
安い。
申し込み 夜にLINEモバイル公式ページから申し込みをし、次の日には本人確認も完了してSIMが発送されました。
早い。
本人確認書類(免許証など)は携帯で写真を撮ってそのままアップロードした方が楽なので携帯で申し込みがオススメ。
MNP 今回は au から MNP で乗り換えしたので、切り替え作業の申し込みをし、30分後にはLINEモバイルのSIMが使えるようになりました。
申し込みは電話で。本人確認の質問に幾つか答えるだけなのですぐ終わる。まだ始まったばかりだからか、電話は繋がりにくかった。
おわり 音声電話をつけたのは仕事のためですね。普段使うことはほとんどない。
ちょうどauが2年経って更新月だったところにLINEモバイルが始まったので、重い腰を上げて乗り換えをしました。
料金もそうですが、この2年縛りがなんとも面倒だったのも乗り換えの理由です。
※ LINEモバイルも音声通話をつけると1年縛りが発生します</description></item><item><title>Mongoid エラーメッセージが翻訳されない時</title><link>https://blog.mknkisk.com/posts/mongoid-translation-missing/</link><pubDate>Sun, 24 Jul 2016 17:16:05 +0900</pubDate><guid>https://blog.mknkisk.com/posts/mongoid-translation-missing/</guid><description>Env Rails 4.2.7 Mongoid 5.1.1 Mongoid のエラーメッセージを正常に出力する 英語以外のロケールで Mongoid を使用していると、 Mongoid のエラーが発生した際にそのエラーメッセージが翻訳できずに translation missing エラーが発生してしまいます。
Mongoid::Errors::DocumentNotFound: translation missing: ja.mongoid.errors.messages.message_title: translation missing: ja.mongoid.errors.messages.document_not_found.message translation missing: ja.mongoid.errors.messages.summary_title: translation missing: ja.mongoid.errors.messages.document_not_found.summary translation missing: ja.mongoid.errors.messages.resolution_title: translation missing: ja.mongoid.errors.messages.document_not_found.resolution from /Users/himeko/work/MyApp/vendor/bundle/ruby/2.3.0/gems/mongoid-5.1.1/lib/mongoid/criteria.rb:454:in `check_for_missing_documents!&amp;#39; エラーメッセージは英語で構わないですし、翻訳できない場合は英語にするように設定してしまいます。
application.rb
config.i18n.default_locale = :ja + config.i18n.fallbacks = { ja: :en } すると正しくエラーメッセージが表示されるようになります。
Mongoid::Errors::DocumentNotFound: message: Document(s) not found for class User with id(s) {:id=&amp;gt;&amp;#34;1&amp;#34;}. summary: When calling User.find with an id or array of ids, each parameter must match a document in the database or this error will be raised.</description></item><item><title>Mongoid フィールド定義の上書きを設定する</title><link>https://blog.mknkisk.com/posts/mongoid-overwrite-field-option/</link><pubDate>Sat, 23 Jul 2016 16:40:17 +0900</pubDate><guid>https://blog.mknkisk.com/posts/mongoid-overwrite-field-option/</guid><description>Env Rails 4.2.7 Mongoid 5.1.1 結論 警告を消したいなら、以下のように overwrite オプションを追加することで消すことができます。
field :_id, type: String, overwrite: true, default: -&amp;gt; { generate_id } 以下では設定前後の比較やログの確認をしています。
警告メッセージを確認する フィールドを重複して定義していると警告がログに出力されます。 コーディングミスにより重複している場合はこのログで気づけるわけです。
ですが、例えば _id フィールドの採番ルールをカスタマイズしたい場合など、フィールドを再定義したい場合があります。
app/models/user.rb
class User include Mongoid::Document include Mongoid::Timestamps field :_id, type: String, default: -&amp;gt; { generate_id } field :created_at, type: Time, default: -&amp;gt; { Time.current } end Rails console
$ rails c &amp;gt; User.first log/development.log
Overwriting existing field _id in class User. Overwriting existing field created_at in class User.</description></item><item><title>2016/05/16 気になるサービス</title><link>https://blog.mknkisk.com/posts/2016-05-16-services/</link><pubDate>Mon, 16 May 2016 16:20:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/2016-05-16-services/</guid><description>slack-sql https://github.com/wang502/slack-sql
Slack 上でSQLを実行する /sql コマンドが使えるようになる 面白いこと考える人がいますねー Python で実装されており、DatabaseはPostgreSQL GitHub でソースが公開されています カゴ落ち損失シミュレーター http://www.cart-rcv.jp/sim/#/view
ひと月の売上高と平均単価を入力することで、カゴ落ちにより発生するであろう損失金額を導き出す http://eczine.jp/news/detail/3123 Image Search Keyboard
https://imagesearchkeyboard.com/
iOS キーボードアプリ キーボードから Google の画像検索をして貼り付けできる 個人的には lgtm.in とか tiqav 版もあると嬉しい 画像で会話するような時に便利かも(チャットやTwitter)</description></item><item><title>Itamae &amp; Serverspec ことはじめ</title><link>https://blog.mknkisk.com/posts/itamae-serverspec-getting-started/</link><pubDate>Sun, 15 May 2016 15:20:36 +0900</pubDate><guid>https://blog.mknkisk.com/posts/itamae-serverspec-getting-started/</guid><description>Itamae を使って Vagrant 環境を構築してみます。 また、構築した環境は Serverspec でテストします。
今回のサンプルコードは GitHub にアップしました。
Env Mac OS X El Capitan 10.11.4 ruby 2.3.1 rake 11.1.2 itamae 1.9.6 serverspec 2.34.0 Vagrant 1.8.1 Vagrant セットアップ まずは Vagrant の設定を。
$ mkdir workdir; cd workdir $ vagrant init CentOS7 で試してみたことがあったので、今回は Ubuntu でいきます。
$ vagrant init ubuntu/trusty64; vagrant up --provider virtualbox ref: https://git.io/vrsCY
起動した Vagrant にログインできることを確認。
$ vagrant ssh Itamae で Nginx をインストール Itamae も Serverspec も Ruby の Gem で公開されています。 Bundler を使ってインストールします。</description></item><item><title>2016/04/25 気になるサービス</title><link>https://blog.mknkisk.com/posts/2016-04-25-services/</link><pubDate>Tue, 26 Apr 2016 01:12:28 +0900</pubDate><guid>https://blog.mknkisk.com/posts/2016-04-25-services/</guid><description>O RLY Cover Generator
http://dev.to/rly
オライリー風の画像ジェネレーター 色や表示の動物などを選択してそれっぽい表示画像を作れる bioo
http://www.bioo.tech/
植物から電気を作って、スマホやタブレットを充電!! 化学はよくわからないのですが光合成によって発生した電気を使ってる?? クラウドファウンドで資金調達中 glot.io
https://glot.io/
コードスニペットの実行, 保存, 共有が可能 コードの実行はdocker上で行われる Hashkell製のOSS</description></item><item><title>2016/04/18 気になるサービス</title><link>https://blog.mknkisk.com/posts/2016-04-18-services/</link><pubDate>Wed, 20 Apr 2016 23:00:30 +0900</pubDate><guid>https://blog.mknkisk.com/posts/2016-04-18-services/</guid><description>せっかく社内に共有してるのでこっちにも転載
HeroZebra
https://www.herozebra.com/
Instagram にアップした画像で自分のショップを持てるサービス Instagram のアカウントが必要 決済は Paypal, Stripe 独自ドメイン使用可能 STORES.jp も Instagram の画像を商品画像にできるんだよ
kite
https://kite.com/
コードを書くとリアルタイムでスニペットやサジェストを表示してくれる エディターのみならず、ターミナルのコマンドもサポート タイポも指摘してくれる (Did you mean) Sublime Text, emacs, vim, PyCharm, Atom, Terminal.app, iTerm をサポート これは捗るかも!! 詳しく見てませんが入力情報をどのくらい送信してるかが気になりますね
※ なんで 凧 ??
Spaces
https://joinspaces.co/
インテリア特化のキュレーションサイト 商品は全てAmazonのもの 購入も Amazon.com から 面白いのは部屋のコーディネート例から、そこに使われている商品を買えるところ 新居を購入した夫婦で運営してるようですよ</description></item><item><title>Input Validation using Regular Expressions</title><link>https://blog.mknkisk.com/posts/input-validation-using-regular-expressions/</link><pubDate>Wed, 06 Apr 2016 02:57:55 +0900</pubDate><guid>https://blog.mknkisk.com/posts/input-validation-using-regular-expressions/</guid><description>Injection Vulnerabilities For example SQL Injection
Sample code
SELECT * FROM users WHERE id='$id' $id is fetched from the user input.
if user input is below,
';DELETE FROM users -- Sample code to create an SQL statement to select
SELECT * FROM users WHERE id='';DELETE FROM users --' Check input values using regular expressions Only alphanumeric and length 1-5
'/\A[a-z0-9]{1,5}\z/ui' u : UTF-8 encoding i : case-insensitive mode \A \z : \A only ever matches at the start of the string.</description></item><item><title>[tig] Browse the Github pull request</title><link>https://blog.mknkisk.com/posts/tig-open-pull-request/</link><pubDate>Tue, 29 Mar 2016 02:03:07 +0900</pubDate><guid>https://blog.mknkisk.com/posts/tig-open-pull-request/</guid><description>Browse the Github pull request that includes selected commit
Required jonas/tig github/hub open-pr command $ vim open-pr $ chmod +x open-pr ref: https://gist.github.com/mknkisk/381acbb8c87f67df5e3f
Browse Github pull request page
$ open-pr {commit id} Custom bindings to tig custom bindings to tig in your ~/.tigrc
+ bind generic P @open-pr %(commit) Refs GitベースのコードリーディングTips - クックパッド開発者ブログ tig から当該コミットがマージされた Pull Request 画面を開く - Qiita Find the github pull request for a commit</description></item><item><title>Sidekiq API</title><link>https://blog.mknkisk.com/posts/sidekiq/</link><pubDate>Tue, 22 Mar 2016 16:23:08 +0900</pubDate><guid>https://blog.mknkisk.com/posts/sidekiq/</guid><description>Queue Deletes all Jobs in a Queue, by removing the queue.
Sidekiq::Queue.new.clear link: API · mperham/sidekiq Wiki</description></item><item><title>Extract email &amp; message of bounced mail from Postfix logs</title><link>https://blog.mknkisk.com/posts/extract-email-message-from-postfix-mail-log/</link><pubDate>Tue, 01 Mar 2016 01:36:02 +0900</pubDate><guid>https://blog.mknkisk.com/posts/extract-email-message-from-postfix-mail-log/</guid><description>Extract email &amp;amp; message from Postfix logs
$ grep 'status=bounced' mail.log | gawk 'match($0, /to=&amp;lt;(.+)&amp;gt;,.+said: (.+)$/, m) {print m[1] &amp;quot;,&amp;quot; m[2]}' &amp;gt; extract_email_message_from_maillog.csv $ cat extract_email_message_from_maillog.csv hoge@example.com, 550 &amp;lt;hoge@example.com&amp;gt;: User unknown (in reply to RCPT TO command)) hoge@example.com, 50-5.1.1 The email account that you tried to reach does not exist. Please try 550-5.1.1 double-checking the recipient's email address for typos or 550-5.1.1 unnecessary spaces. Learn more at 550 5.1.1 https://support.google.com/mail/answer/6596 Sort error code</description></item><item><title>Web + その他の記事メモ - 2016/02/13</title><link>https://blog.mknkisk.com/posts/matome-20160213/</link><pubDate>Sat, 13 Feb 2016 14:01:35 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20160213/</guid><description>EC
Tokyo Otaku Modeに訊く、「独身の日」の経験から言える中国越境ECの戦いかた|ECzine（イーシージン） [http://eczine.jp/article/detail/2700?p=3] * 海外でECやるには文化の違いも考えないとですね (サポート対応 etc) AWS
ELBのアクセスログをAWS LambdaでElasticsearchに取り込む ｜ Developers.IO [http://dev.classmethod.jp/cloud/aws/elb-accesslog-to-elasticsearch/] * 最近、Lambda をやっと触り始めたので Analytics
無料でGoogleアナリティクスと連携してKPIを自動設定する「Dot metrix」サービス提供開始 | Web担当者Forum [http://web-tan.forum.impressrd.jp/n/2016/02/09/22149] JS
最近のWebサイトで使われている、レスポンシブ対応のページレイアウトに役立つスクリプトのまとめ | コリス [http://coliss.com/articles/build-websites/operation/javascript/javascripts-for-page-layout.html] OSS
nemex.io [http://nemex.io/] Markdown記法で書けるライトなOSSブログエンジン・「nemex」 - かちびと.net [http://kachibito.net/useful-resource/nemex] Service
Foodshot [http://foodshot.co/]
食品関係の写真素材をCC0ライセンスで提供するフード専門のストックフォトサイト・「FOODSHOT」 - かちびと.net [http://kachibito.net/useful-resource/foodshot] * 食品特化のサイトは初めて見た
社内で利用するツールを紹介し合うクチコミサービス - Wantedly Tools [https://www.wantedly.com/company_tools]
ウォンテッドリー、社内で利用するツールをシェアする口コミ機能「Wantedly Tools」を開始 - THE BRIDGE（ザ・ブリッジ） [http://thebridge.</description></item><item><title>Web + その他の記事メモ - 2016/02/06</title><link>https://blog.mknkisk.com/posts/matome-20160206/</link><pubDate>Sat, 06 Feb 2016 20:35:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20160206/</guid><description>JS
Angular: Angular 1.5.0 - ennoblement-facilitation has been released! [http://angularjs.blogspot.jp/2016/02/angular-150-ennoblement-facilitation.html] * AngularJS 1.5 リリース!! * 1.x 系はこれが最後ですかね CSS
CSSがこんなに進化してるとは！18才の少年がつくった3Dアニメーションのライブラリがすごすぎる -voxel.css | コリス [http://coliss.com/articles/build-websites/operation/css/3d-css-voxel-library-voxelcss.html]
voxel.css [http://www.voxelcss.com/] * CSSでなんでもできるなー
CSS のカバレッジを計測する Clairvoyance というツールを作りました - アジャイルSEの憂鬱 [http://sinsoku.hatenablog.com/entry/2016/01/31/174155]
SEO
グーグルのアルゴリズム変更による検索順位の変動――過去2年間の傾向を振り返る（インフォグラフィック） | Moz - SEOとインバウンドマーケティングの実践情報 | Web担当者Forum [http://web-tan.forum.impressrd.jp/e/2016/02/01/22088] MOZCAST [http://mozcast.com/] Design
No UIという考え方とUIデザイナーのこれから | eureka tech blog [https://developers.eure.jp/design/designer-blog-04/] Service
BLANK [https://blankhq.</description></item><item><title>Web + その他の記事メモ - 2016/01/16</title><link>https://blog.mknkisk.com/posts/matome-20160116/</link><pubDate>Mon, 18 Jan 2016 18:06:21 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20160116/</guid><description>JavaScript jQuery 2.2 and 1.12 Released | Official jQuery Blog [http://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/]
jQuery登場から10周年。jQuery 3.0ベータ版が公開 － Publickey [http://www.publickey1.jp/blog/16/jquery10jquery_30.html]
Angularの5年とこれから // Speaker Deck [https://speakerdeck.com/armorik83/angularfalse5nian-tokorekara]
Angular2 にそろそろ踏み込む Ruby on Rails Cells4 - Ruby/Rails でView components を実現する[Rails4.2] - 酒と泪とRubyとRailsと [http://morizyun.github.io/blog/cells4-rails-partial-compornents-framework/]
draper [https://github.com/drapergem/draper] と似た感じ?? AWS Amazon Web Services ブログ: AWS Device Farm で Web モバイルアプリのテストができるようになりました [http://aws.typepad.com/aws_japan/2015/11/aws-device-farm-update-test-web-apps-on-mobile-devices.html]
ちょっと前の記事ですが、そろそろ試してみたいと思いピック Webアプリもテスト可能 Amazonクラウド、月末だけ／週末だけ／ある曜日や時間だけなど、定期的な利用を割安にする「スケジュールドリザーブドインスタンス」を発表 [http://www.publickey1.jp/blog/16/amazon_9.html]
おぉ、これは重宝しそう northeast での提供を待つ EC IVS「Launch Pad」で見つけた、注目のファッションテックスタートアップ4社 [http://www.difa.me/style/ivslaunchpad2015]
今年もECサービス、アプリは続々と出てくるのでしょうか 2015年は minne [https://minne.</description></item><item><title>Switching from zsh to fish</title><link>https://blog.mknkisk.com/posts/switching-from-zsh-to-fish/</link><pubDate>Wed, 13 Jan 2016 02:23:19 +0900</pubDate><guid>https://blog.mknkisk.com/posts/switching-from-zsh-to-fish/</guid><description>zsh -&amp;gt; fish
Env fish v2.5.0 fisherman v2.11.0 Install fish $ brew install fish Set default shell /etc/shells
# last line + /usr/local/bin/fish $ chsh -s /usr/local/bin/fish Install fisherman $ curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher refs: https://github.com/fisherman/fisherman#install
Install theme: bira $ fisher install omf/theme-bira Config $HOME/.config/fish/config.fish
# vi mode fish_vi_key_bindings # rbenv set RBENV_ROOT -x /usr/local/var/rbenv rbenv init - | source # nodebrew set -x PATH $HOME/.nodebrew/current/bin $PATH # abbr list abbr -a be bundle exec abbr -a g git abbr -a gb git branch abbr -a gc git checkout abbr -a gs git status abbr -a o open abbr -a v vim Refs fisherman/fisherman お手軽なzshからfish shellへの移行手順 - Qiita 詳解 fishでモダンなシェル環境の構築(fish,tmux,powerline,peco,z,ghq,dracula) - Qiita oh-my-fish/Themes.</description></item><item><title>Web + その他の記事メモ - 2016/01/09</title><link>https://blog.mknkisk.com/posts/matome-20160109/</link><pubDate>Sat, 09 Jan 2016 12:00:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20160109/</guid><description>EC 「#（ハッシュタグ）」を活用した消費者目線のグルーピングが新しい haco!スマホECサイトに注目|ECzine（イーシージン） [http://eczine.jp/article/detail/2550]
カテゴリとは違う軸での検索 TwitterやInstagramに慣れてるととっつきやすい?? SEO コンテンツSEOで新たな顧客層の獲得に成功！ ─カタログ通販の「セシール」 | ネットショップ担当者フォーラム　ダイジェスト | Web担当者Forum [http://web-tan.forum.impressrd.jp/e/2016/01/06/21863]
セシールさんのSEO事例 2003年からの長期に渡る施策の数々は非常に参考になった あたりまえだが施策実行前の背景が大事!! 画像処理 もうサムネイルで泣かないための ImageMagick ノウハウ集 - Cybozu Inside Out | サイボウズエンジニアのブログ [http://blog.cybozu.io/entry/2016/01/06/080000]
Git 「Git 2.7」リリース、多数の機能強化などが行われる | OSDN Magazine [https://osdn.jp/magazine/16/01/06/160000]
Git 2.7 の優れた新機能 - Atlassian Japan [http://japan.blogs.atlassian.com/2016/01/git-2-7-release/]
Git 2.7 リリース worktree, bisect の改善 WEB+DB PRESS Vol.90 [http://gihyo.jp/magazine/wdpress/archive/2016/vol90] でGit特集があるので合わせて読むと worktree, bisect がよくわかります Gitで流行のコミットメッセージとベーシックなコミットメッセージまとめ - Qiita [http://qiita.com/falsandtru/items/d81d844afaca8db2756e]
コミットメッセージのフォーマット例 Googleフォーマットのように選択肢がある程度決まっていると迷いが少なそう また個々人のブレも少なくなるので端から見ても綺麗なPJに見える 英語学習 エンジニアが0から英語を勉強する為にした事 - ギークに憧れて [http://hotchemi.</description></item><item><title>Web + その他の記事メモ - 2016/01/02</title><link>https://blog.mknkisk.com/posts/matome-20160102/</link><pubDate>Sat, 02 Jan 2016 12:18:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20160102/</guid><description>アプリ アップル整備済製品の最新情報やプッシュ通知を受け取れる iPhoneアプリ「RefurbMe」 | iTea4.0 [http://itea40.jp/application/iphone-app-lifestyle/refurbme/]
整備品はなかなか手に入らないのでありがたい 来年こそは遅刻しない、本気出す！アラームを止めるまでかなり大変な「cloudiss」 | Techable(テッカブル) [http://techable.jp/archives/34781]
今年から本気出す!! 「Twitter for Mac 4.0.0」がリリース。デザインの刷新、ダークテーマのサポート、Twitter最新機能をサポートする [http://www.softantenna.com/wp/mac/twitter-for-mac-4-0-0-released/]
Twitter for Mac はバグが多くて Tweetbot を買ったところでした Service こんなにあるんだ、2015年に終了のお知らせをしたサービス40選 | モバイルマーケティング研究所 |ModuleApps [https://moduleapps.com/mobile-marketing/2015closed/]
2015年終了サービス多かったですね〜。展開の早い世界。 Talkus [https://www.talkus.io]
intercom [https://www.intercom.io/] のようにカスタマーサポートのチャットサービス。 チャットの内容はSlackに流れ、返信できる。Slackを社内で使っていれば使い慣れていて良いかも そのた、絵文字や画像、コードブロックなどSlackの機能をうまく使って多くの情報を手軽にユーザーと交わせるようになっている JavaScript gistやYoutube、Vine、TwitterやGoogle Mapなど、様々なサービスをembed出来る・「embed.js」 - かちびと.net [http://kachibito.net/useful-resource/embed-js]
※リンク切れ? してるようだったのでGitHubのリンクも ritz078/embed.js [https://github.com/ritz078/embed.js] Elasticsearch 2015年のElasticsearch - @johtaniの日記 2nd [http://blog.johtani.info/blog/2015/12/25/about-elasticsearch-in-2015/]
Elasticsearch はこの1年でメジャーバージョンも変わり、変化の激しかったサービスの印象。 1.5で知識が止まってるので今年は今一度動かしてみないと NEWS もっともハードコアなLinuxディストリビューションDebianを作ったIan Murdockが42歳で死去 | TechCrunch Japan [http://jp.</description></item><item><title>Web + その他の記事メモ - 2015/12/26</title><link>https://blog.mknkisk.com/posts/matome-20151226/</link><pubDate>Sat, 26 Dec 2015 23:16:24 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20151226/</guid><description>Ruby Ruby 2.3.0 リリース [https://www.ruby-lang.org/ja/news/2015/12/25/ruby-2-3-0-released/]
JavaScript ページのスクロール時にviewport内に入った要素をアニメーション表示させる非依存型で軽量なスクリプト・「ScrollReveal」 - かちびと.net [http://kachibito.net/useful-resource/scrollreveal]
gistやYoutube、Vine、TwitterやGoogle Mapなど、様々なサービスをembed出来る・「embed.js」 - かちびと.net [http://kachibito.net/useful-resource/embed-js]
EC 購入の8〜9割がスマホ経由、月150万円売る作家も登場。ハンドメイドマーケット「minne」アプリ運営で大事な問いは「真の目的はなんですか？」 | アプリマーケティング研究所 [http://appmarketinglabo.net/minne/]
チャットベースのショッピングアプリ「Operator」 ー Uberの共同創業者が開発 | Shopping Tribe [http://shopping-tribe.com/world-watch/24084/]
Infra, AWS 実録！サービスを止めずに Amazon Aurora へ移行した話 - ヌーラボ [Nulab Inc.] [https://nulab-inc.com/ja/blog/nulab/migrate-to-aurora/]
Web API Web APIにはJSONベースのフォーマットを使おう - Qiita [http://qiita.com/tkawa/items/2841e155e5b51c09ed40]
Development 初心者エンジニアにおすすめしたい「進捗どうなった？」と言われないための仕事の進め方 - Qiita [http://qiita.com/soyanchu/items/d1cb9785fc211941a009]
システム障害と僕達はいかにして戦えば良いのか、障害対応について考えた - Qiita [http://qiita.com/zaru/items/edb49d8d2a2a6981789a]
Git Git超絶まとめ - Qiita [http://qiita.com/masashi127/items/2e103c3fba9d1b058961]
Security 「2015年度情報セキュリティに対する意識調査」報告書について：IPA 独立行政法人 情報処理推進機構 [http://www.ipa.go.jp/security/fy27/reports/ishiki/index.html]</description></item><item><title>Web + その他の記事メモ - 2015/12/19</title><link>https://blog.mknkisk.com/posts/matome-20151219/</link><pubDate>Sat, 19 Dec 2015 10:17:26 +0900</pubDate><guid>https://blog.mknkisk.com/posts/matome-20151219/</guid><description>1週間ぐらいの間での個人的な感心事をまとめる
JavaScript
AngularJS: Angular 2 Beta [http://angularjs.blogspot.jp/2015/12/angular-2-beta.html] AngularJS: Angular Material 1.0 Now Available! [http://angularjs.blogspot.jp/2015/12/angular-material-10-now-available.html] 任意の画像からよさ気な部分を自動で切り取るスクリプト・「smartcrop.js」 - かちびと.net [http://kachibito.net/useful-resource/smartcrop-js] EC
スタートトゥデイ、フリマアプリ「ZOZOフリマ」を提供開始 ー わずか数秒で出品可能に | Shopping Tribe [http://shopping-tribe.com/news/24125/] The Future of Spree Open Source Software | Spree Commerce [https://spreecommerce.com/blog/future-of-spree-oss#.VmwmUcJFwFU.twitter] ミンネ、 ヤマト運輸「宅急便コンパクト」「ネコポス」とシステム連携|ECzine（イーシージン） [http://eczine.jp/news/detail/2541] Security
【注意喚起】 Internet Explorer のサポートポリシーが変更、バージョンアップが急務に：IPA 独立行政法人 情報処理推進機構 [http://www.ipa.go.jp/security/ciadr/vul/20151215-IEsupport.html] Internet Explorerは、最新バージョンへのアップデートが必要です - Yahoo! JAPAN [http://docs.yahoo.co.jp/info/msiesp/index.html] SEO
Google ウェブマスター向け公式ブログ: HTTPS ページが優先的にインデックスに登録されるようになります [http://googlewebmastercentral-ja.blogspot.jp/2015/12/indexing-https-pages-by-default.html] Infra
elasticの新プロダクト「Beats」シリーズに震える！ - Taste of Tech Topics [http://acro-engineer.</description></item><item><title>Weekly Report - 2015/11/21</title><link>https://blog.mknkisk.com/posts/weekly-report-2015-11-21/</link><pubDate>Sat, 21 Nov 2015 23:51:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/weekly-report-2015-11-21/</guid><description>自分向けの週報です。今週の出来事を振り返り。
今週の出来事 『ガールズ＆パンツァー　劇場版』プレミア前夜祭 参加
テンション上がった！もぅ１回行きたい！
今週読んだ記事 チーム全員でユーザー価値の向上に取り組むための開発プロセス設計 - クックパッド開発者ブログ [http://techlife.cookpad.com/entry/2015/11/06/170915]
同じような取り組みをしてるものの、抽象的なタスクの細分化が自分達は弱いなーっと。参考にして改善する。
複数のエンジニアと開発を円滑に進めるためのissueの立て方 - クックパッド開発者ブログ [http://techlife.cookpad.com/entry/2015/11/05/173701]
一つ注意していただきたいのは、早く要点をまとめたissueを立てることが重要なのであって、早く雑にissueを立てることを推奨しているのではありません。
忘れないようにとissueをざっくりしたまま立てた結果、多方面からつっこみを受けて収拾つかなくなった経験があるので気をつけないと。
issueのテンプレを参考にしたい
[Ruby] よく使うRspecのレシピ集（Rspec3.3） ｜ Developers.IO [http://dev.classmethod.jp/testing/unittesting/rspec-recipe/]
Rspec まだまだ使いこなせてないので参考に。 テストが書きにくくなったらリファクタリングをしたほうがいい というのは経験上からも大賛成
GitベースのコードリーディングTips - クックパッド開発者ブログ [http://techlife.cookpad.com/entry/2015/11/17/151426]
後でまた読み直したい。Git力が足りない。
About Lotus Framework // Speaker Deck [https://speakerdeck.com/yyagi/about-lotus-framework]
Ruby製Webフレームワーク Lotus の紹介スライド
Angular 1.xコンポーネントを、Angular 2にアップグレードする | プログラミング | POSTD [http://postd.cc/walkthrough-to-upgrade-an-angular-1-x-component-to-angular-2/]
自分が思っていたよりは変更点が少なそうという印象。 噂からまるっと変わるのかと思ってたので。
ただしHTMLはずいぶんと変わったような。 AngularJS初見の方は「？」が浮かぶだろうな。
“折り紙”のように折りたためる、軽くて丈夫なデスクスタンドがKickstarterで大人気！ | Techable(テッカブル) [http://techable.jp/archives/33098]
出資しました :)
雑記 「あとでみる」が溜まってたのもあってクックパッドさんの記事が多め</description></item><item><title>Setup a new Mac (El Capitan)</title><link>https://blog.mknkisk.com/posts/setup-a-new-mac/</link><pubDate>Wed, 18 Nov 2015 01:32:12 +0900</pubDate><guid>https://blog.mknkisk.com/posts/setup-a-new-mac/</guid><description>Install homebrew $ ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; ref: http://brew.sh/index_ja.html
Install fish See my other post -&amp;gt; Switching from zsh to fish
Install brew-file $ brew install rcmdnk/file/brew-file ref: http://rcmdnk.github.io/blog/2015/06/30/computer-mac-brew-file-homebrew/ ref: https://github.com/rcmdnk/homebrew-file
Install applications &amp;amp; libraries by homebrew &amp;amp; homebrew cask $ mkdir work; cd work $ git clone git@github.com:mknkisk/Brewfile.git $ echo &amp;quot;set -x HOMEBREW_BREWFILE /Users/keisuke/work/Brewfile/Brewfile&amp;quot; &amp;gt;&amp;gt; ~/.config/fish/config.fish $ brew file install Install applications from App Store Xcode Twitter Kobito Install other applications Clipy [https://clipy-app.</description></item><item><title>ピックアップサービス 2015/11/16</title><link>https://blog.mknkisk.com/posts/pitukuatupusabisu-2015-11-16/</link><pubDate>Mon, 16 Nov 2015 10:00:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/pitukuatupusabisu-2015-11-16/</guid><description>1Password for Teams
パスワードやアカウント情報の管理アプリ 1Password からチーム向けの管理共有サービス 1Password for Teams がベーた版で公開されました。
ベータ版のうちは無料とのこと
https://teams.1password.com/
TUTSET Web上の各種プログラミングのチュートリアル キュレーションサイト
http://www.tutset.com/
Sello
Shopifyから新しい管理アプリがリリースされました 現在は US, UK, Canada でのみ公開されています。
他地域にも順次対応とのこと
https://getsello.com/
Product Hunt 2周年
Product Hunt が2周年を迎えました :) 各カテゴリごとに投票数が多かったプロダクトがランキングされています
https://medium.com/@producthunt/2-years-499640c6d35f</description></item><item><title>MongoDB 3.x インデックス生成前後のexplain()結果を読む</title><link>https://blog.mknkisk.com/posts/mongodb-3-index-explain/</link><pubDate>Sun, 10 May 2015 15:16:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/mongodb-3-index-explain/</guid><description>はじめに MongoDB 3.0 から explain() の出力結果が変わり、読み解くのに時間がかかってしまいました。 今回はインデックスの生成前後で explain() の結果がどう変わるかを確認してみます。
環境 Mac OS X 10.10.3 MongoDB 3.0.2 MongoDB storage engine: mmapv1 (default) サンプルデータの準備 DBを用意 $ mongo &amp;gt; use sample_db switched to db sample_db サンプルデータ追加 とりあえず10万件のドキュメントを生成しておきます。
&amp;gt; for (var i=0; i &amp;lt; 100000; i++) { ... db.items.insert({ name: 'item_' + i, price: 100 + i }) ... } &amp;gt; db.items.count() 100000 インデックスが無い状態 itemsコレクションから119円の商品を探すクエリを実行します。
&amp;gt; db.items.find({price: 119}).explain(&amp;quot;executionStats&amp;quot;) { &amp;quot;queryPlanner&amp;quot; : { &amp;quot;plannerVersion&amp;quot; : 1, &amp;quot;namespace&amp;quot; : &amp;quot;sample_db.</description></item><item><title>jqコマンドを使ってみた</title><link>https://blog.mknkisk.com/posts/jq-command/</link><pubDate>Fri, 28 Jun 2013 02:03:00 +0900</pubDate><guid>https://blog.mknkisk.com/posts/jq-command/</guid><description>jqコマンドなるものがあるそうなので入れてみました。
jq - GitHub Pages 参考にさせて頂いたのはこちらの記事です。
jqコマンドが実は高性能すぎてビビッた話 jqはコマンドラインでJSONデータを扱うのに便利なコマンドです。
jq is a lightweight and flexible command-line JSON processor.
インストール MacBook Air Mid 2011 Mac OS X 10.8.4 Homebrew 0.9.4 jq version 1.3 Mac なら homebrew を使うのが簡単そうです。
$ brew search jq jq $ brew install jq $ jq --version jq version 1.3 これで終わりです。簡単ですね。 ソースコードからのビルドやLinux, Windowsに関しては 公式ドキュメント をご覧ください。
サンプルのJSONを用意する JSONファイルを用意します。 jqの動きをざっと知りたいので簡素なJSONを。
$ cat sample.json {&amp;quot;items&amp;quot;:[{&amp;quot;name&amp;quot;:&amp;quot;kirino&amp;quot;},{&amp;quot;name&amp;quot;:&amp;quot;kuroneko&amp;quot;}]} 改行もインデントも無いフラットなJSONです。</description></item></channel></rss>